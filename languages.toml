###############################################################################
# language
###############################################################################
[[language]]
name = "c"
indent = { tab-width = 4, unit = "    " }
auto-format = true

[[language]]
name = "cpp"
indent = { tab-width = 4, unit = "    " }
auto-format = true

[[language]]
name = "dotenv"
scope = "source.dotenv"
injection-regex = "env(\\.\\w+)?"
# injection-regex = "env"
file-types = ["dotenv", "env"]
comment-token = "#"
roots = []
language-servers = ["typos-lsp"]
[[grammar]]
name = "dotenv"
source = { git = "https://github.com/EpocSquadron/tree-sitter-dotenv", rev = "d19d0193a3fee97f3fccecc98c8fbcf965b6f503" }

[[language]]
name = "json"
auto-format = true
# config = { "provideFormatter" = true, "json" = { "keepLines" = { "enable" = true } } }

[[language]] # software custom
name = "lfrc"
scope = "source.lfrc"
file-types = ["lfrc"]
comment-token = "#"
roots = []
indent = { tab-width = 4, unit = "    " }

[[language]]
name = "lua"
indent = { tab-width = 2, unit = "  " }
auto-format = true
[language.formatter]
command = "stylua"
args = [
  "--indent-width",
  "2",
  "--indent-type",
  "Spaces",
  "--column-width",
  "80",
  "--line-endings",
  "Windows",
  "--quote-style",
  "ForceSingle",
  "-",
]

[[language]]
name = "markdown"
roots = [".marksman.toml"]
# language-servers = ["marksman", "ltex-ls"]
language-servers = ["marksman", "typos-lsp"]
indent = { tab-width = 4, unit = "    " }
formatter = { command = "dprint", args = ["fmt", "--stdin", "md"] }
auto-format = true

[[language]]
name = "nu"
language-servers = ["nu-lsp", "typos-lsp"]
auto-format = true

[[language]]
name = "powershell"
scope = "source.ps1"
file-types = ["ps1", "psm1"]
roots = [".git"]
comment-token = "#"
indent = { tab-width = 4, unit = "    " }
language-servers = ["powershell-editor-services"]
auto-format = true
[[grammar]]
name = "powershell"
# source = { git = "https://github.com/PowerShell/tree-sitter-PowerShell", rev = "1ac090522cb339a6fd9d3ac915da01cb263d69e1" }
source = { git = "https://github.com/airbus-cert/tree-sitter-powershell", rev = "48f1a74725092281bd2b1606ad302100ffa537a9" }

[[language]]
name = "python"
indent = { tab-width = 4, unit = "    " }
language-servers = ["pyright", "ruff-lsp", "typos-lsp"]
auto-format = true
# [language.formatter]
# command = "cmd"
# args = ["/c", "isort --profile black -l 80 -q - | black -l 80 -q -"]

[[language]]
name = "rust"
indent = { tab-width = 4, unit = "    " }
language-servers = ["rust-analyzer", "typos-lsp"]
auto-format = true
[language.formatter]
command = "rustfmt"
args = [
  "+nightly",
  # "--config",
  # "newline_style=Windows,max_width=80,match_block_trailing_comma=true,use_field_init_shorthand=true,use_try_shorthand=true",
  "--config-path",
  "~/AppData/Roaming/helix/rustfmt.toml",
  # "--edition",
  # "2021",
]
[language.debugger]
command = "codelldb"
name = "codelldb"
port-arg = "--port {}"
transport = "tcp"
[[language.debugger.templates]]
name = "binary"
request = "launch"
[[language.debugger.templates.completion]]
completion = "filename"
name = "binary"
[language.debugger.templates.args]
program = "{0}"
runInTerminal = true

[[language]]
name = "toml"
formatter = { command = "taplo", args = ["fmt", "--option", "crlf=true", "-"] }
language-servers = ["taplo", "typos-lsp"]
auto-format = true

[[language]]
name = "yaml"
language-servers = ["yaml-language-server", "typos-lsp"]
auto-format = true

###############################################################################
# language-server
###############################################################################
[language-server.ltex-ls.config.ltex]
disabledRules = { "en-US" = ["PROFANITY"] }
dictionary = { "en-US" = ["builtin", "nonebot", "todo", "eval", "jupyter"] }

[language-server.nu-lsp]
command = "nu"
args = ["--lsp"]

[language-server.powershell-editor-services]
command = "pwsh"
args = [
  "-NoLogo",
  "-NoProfile",
  "-Command",
  "C:\\projects\\powershell\\PowerShellEditorServices\\PowerShellEditorServices\\Start-EditorServices.ps1 -BundledModulesPath C:\\projects\\powershell\\PowerShellEditorServices -SessionDetailsPath C:\\projects\\powershell\\PowerShellEditorServices\\PowerShellEditorServices.sessions.json -LogPath C:\\projects\\powershell\\PowerShellEditorServices\\PowerShellEditorServices.log -FeatureFlags @() -AdditionalModules @() -HostName helix -HostProfileId 0 -HostVersion 1.0.0 -Stdio -LogLevel Normal",
]

[language-server.pyright.config.python.analysis]
typeCheckingMode = "strict" # ["off", "basic", "strict"]

[language-server.rust-analyzer.config.check]
command = "clippy"
# [language-server.rust-analyzer.config.rustfmt]
# rangeFormatting.enable = true                                                                                     # unstable and only available on a nightly build
# extraArgs = '["+nightly","--config-path","~/AppData/Roaming/helix/rustfmt.toml","--edition","2021"]'

# "max_width=80"
# unstable:
# "enum_discrim_align_threshold=20", "fn_single_line=true",
# "format_code_in_doc_comments=true", "format_strings=true", 
# "imports_layout=\"Vertical\"", "reorder_impl_items=true", 
# "struct_field_align_threshold=20", "trailing_comma=\"Always\"",

# # [typos-vsocde](https://github.com/tekumara/typos-vscode)
# [language-server.typos-lsp]
# command = "typos-lsp"
# [language-server.typos-lsp.config.typos] # BUG
# diagnosticSeverity = "Hint" # ["Error", "Warning", "Information", "Hint"]
# logLevel = "info"           # ["off", "error", "warn", "info", "debug", "trace"]
#
# [vlabo/cspell-lsp](https://github.com/vlabo/cspell-lsp)
# [language-server.cspell]
# command = "cspell-lsp"
# args = ["--stdio"]
[language-server.typos-lsp]
command = "cspell-lsp"
args = ["--stdio"]
[language-server.typos-lsp.config.cSpell]
language = "en"
words = ["lfrc"]

[language-server.yaml-language-server.config.yaml]
format = { enable = true }
validation = true
[language-server.yaml-language-server.config.yaml.schemas]
"https://json.schemastore.org/github-workflow.json" = ".github/workflows/*.{yml,yaml}"
"https://raw.githubusercontent.com/ansible-community/schemas/main/f/ansible-tasks.json" = "roles/{tasks,handlers}/*.{yml,yaml}"
