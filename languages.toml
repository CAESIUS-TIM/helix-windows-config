################################################################################
# c
################################################################################
[[language]]
name = "c"
indent = { tab-width = 4, unit = "    " }

################################################################################
# config
################################################################################
[[language]] # TODO: where come from?
name = "config"
scope = "source.config"
injection-regex = "^(conf|env(\\.\\w+)?)$"
file-types = ["env", "conf", "config"]
roots = []
comment-token = "#"

################################################################################
# json
################################################################################
[[language]]
name = "json"
# config = { "provideFormatter" = true, "json" = { "keepLines" = { "enable" = true } } }

################################################################################
# lfrc
################################################################################
[[language]] # software custom
name = "lfrc"
scope = "source.lfrc"
file-types = ["lfrc"]
comment-token = "#"
roots = []
indent = { tab-width = 4, unit = "    " }

################################################################################
# markdown
################################################################################
[[language]]
name = "markdown"
roots = [".marksman.toml"]
language-servers = ["marksman", "ltex-ls"]
indent = { tab-width = 2, unit = "  " }
formatter = { command = "dprint", args = ["fmt", "--stdin", "md"] }
auto-format = true

[language-server.ltex-ls.config.ltex]
disabledRules = { "en-US" = ["PROFANITY"] }
dictionary = { "en-US" = ["builtin", "nonebot", "todo", "eval", "jupyter"] }

################################################################################
# powershell
################################################################################
[[language]]
name = "powershell"
scope = "source.ps1"
file-types = ["ps1", "psm1"]
roots = [".git"]
comment-token = "#"
indent = { tab-width = 4, unit = "    " }
language-servers = ["powershell-editor-services"]

[language-server.powershell-editor-services]
command = "pwsh"
args = [
  "-NoLogo",
  "-NoProfile",
  "-Command",
  "C:\\projects\\powershell\\PowerShellEditorServices\\PowerShellEditorServices\\Start-EditorServices.ps1 -BundledModulesPath C:\\projects\\powershell\\PowerShellEditorServices -SessionDetailsPath C:\\projects\\powershell\\PowerShellEditorServices\\PowerShellEditorServices.sessions.json -LogPath C:\\projects\\powershell\\PowerShellEditorServices\\PowerShellEditorServices.log -FeatureFlags @() -AdditionalModules @() -HostName helix -HostProfileId 0 -HostVersion 1.0.0 -Stdio -LogLevel Normal",
]

[[grammar]]
name = "powershell"
source = { git = "https://github.com/PowerShell/tree-sitter-PowerShell", rev = "1ac090522cb339a6fd9d3ac915da01cb263d69e1" }
# source = { git = "https://github.com/airbus-cert/tree-sitter-powershell", rev = "48f1a74725092281bd2b1606ad302100ffa537a9" }

################################################################################
# python
################################################################################
[[language]]
name = "python"
language-servers = ["pyright"]
indent = { tab-width = 4, unit = "    " }
formatter = { command = "black", args = ["--quiet", "-"] }
auto-format = true

################################################################################
# rust
################################################################################
[[language]]
name = "rust"
indent = { tab-width = 4, unit = "    " }
language-servers = ["rust-analyzer"]

[language-server.rust-analyzer.config.check]
command = "clippy"

[language.debugger]
command = "codelldb"
name = "codelldb"
port-arg = "--port {}"
transport = "tcp"

[[language.debugger.templates]]
name = "binary"
request = "launch"
[[language.debugger.templates.completion]]
completion = "filename"
name = "binary"

[language.debugger.templates.args]
program = "{0}"
runInTerminal = true

################################################################################
# toml
################################################################################
[[language]]
name = "toml"
formatter = { command = "taplo", args = ["fmt", "-"] }
auto-format = true

################################################################################
# yaml
################################################################################
[[language]]
name = "yaml"

[language-server.yaml-language-server.config.yaml]
format = { enable = true }
validation = true

[language-server.yaml-language-server.config.yaml.schemas]
"https://json.schemastore.org/github-workflow.json" = ".github/workflows/*.{yml,yaml}"
"https://raw.githubusercontent.com/ansible-community/schemas/main/f/ansible-tasks.json" = "roles/{tasks,handlers}/*.{yml,yaml}"
